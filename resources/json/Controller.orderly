// ------------------------------------------------------------------------------------------------
//  Copyright 2013-2015, Juha Lindfors. All rights reserved.
//
//  This program is free software; you can redistribute it and/or modify
//  it under the terms of the GNU Affero General Public License as
//  published by the Free Software Foundation; either version 3 of the
//  License, or (at your option) any later version.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
//  GNU Affero General Public License for more details.
//
//  You should have received a copy of the GNU Affero General Public License
//  along with this program; if not, see <http://www.gnu.org/licenses/>.
// ------------------------------------------------------------------------------------------------


// ================================================================================================
//
//  Controller JSON 4.0.0 Schema
//
// ================================================================================================

object {

  // Headers to support versioning and version migration.
  //
  //  - A library name property with a fixed value "OpenRemote Object Model"
  //  - A fully qualified Java class name in package 'org.openremote.model'
  //  - A schema version number with 'major.minor.bugfix' and an optional
  //    version identifier using '_' separator with 'bugfix' version.
  //  - A current API implementation version with 'major.minor.bugfix' and an
  //    optional version identifier using '_' separator with 'bugfix' version.

  string libraryName       /^OpenRemote Object Model$/;
  string javaFullClassName /^org.openremote.model(.[a-zA-Z0-9_]+)+$/;
  string schemaVersion     /^4.0.0(_.*)?$/;
  string apiVersion        /^[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,4}(_.*)?$/;

  // The model object consists of mandatory identifier and a mandatory list of MAC
  // addresses associated with the controller. Optional name and description properties
  // are included for user-readable descriptions of the controller instance.

  object {

    // The identity has been defined as an arbitrary string with minimum length
    // of one and maximum of 255 characters. The identity may contain any controller
    // specific identifying information, such as a hardware serial number, a customer
    // account number, or other unique controller specific identifiers. The controller model
    // implementation can enforce additional identity minimum length restrictions and content
    // restrictions if necessary. The upper length limit is typically restricted by the database
    // schema in use.

    string{1,255} identity          /^.*$/;


    // The MAC addresses are defined as an array, allowing multiple addresses to be registered
    // with a controller instance in case of hardware deployments containing more than one
    // network interface. A MAC address is defined as being exactly 17 characters in length,
    // where each address element is represented by a two-character hexadecimal number. A fixed
    // number of six address elements must be present, each separated with a ':' character.
    //
    // NOTE: Beehive legacy schema:
    //   - The Beehive legacy schema stores all MAC addresses into a string format (with comma
    //     separated addresses) that is limited to at most 255 characters. This allows at most
    //     fourteen MAC addresses to be included with each controller (sufficient under regular
    //     circumstances).

    array [
      string{17,17} /^[0-9a-fA-F]{2}:[0-9a-fA-F]{2}:[0-9a-fA-F]{2}:[0-9a-fA-F]{2}:[0-9a-fA-F]{2}:[0-9a-fA-F]{2}$/;
    ] macAddresses;


    // A descriptive name can be stored with the controller instance. This is intended as a user
    // readable (and potentially user-defined) name that can be used to identify a controller
    // instead of the more technical identity field. The name property is optional and should be
    // omitted if not used. When used, it is constrained to a minimum length of one and a
    // maximum length of 255 characters.

    string{1,255}  name             /^.*$/ ?;


    // A description is an optional, longer human-readable text that describes a controller
    // instance. It is intended to augment the user-defined controller name. When not used,
    // this property should be omitted from the JSON document instance. When used, it is
    // constrained to a minimum length of one and a maximum length of 1000 characters.

    string{1,1000} description      /^.*$/ ?;


    // Controller specific configurations that can be nested in this JSON document instance.

    object { } * controllerConfiguration ?;


    // An optional controller attribute key,value pairs can be included with this object.
    // The maximum allowed key length for attributes is 255 characters and for attribute values
    // is 999 characters. These limitations are typically enforced by the backing database schema
    // and no further schema specifications for controller attributes in JSON format are specified
    // here at this time. Later versions may defined reserved attribute names for specific
    // purposes. If user attributes in the domain object are represented by an empty collection,
    // they should be omitted by the JSON format altogether.

    object { } * controllerAttributes ?;

  } * model;

} * ;